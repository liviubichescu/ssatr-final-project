package ro.avengers.client;

import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import ro.avengers.models.MarvelCharacter;
import ro.avengers.models.Planet;

/**
 *
 * @author liviu.bichescu
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main_menu_panel = new javax.swing.JLayeredPane();
        planets_button = new javax.swing.JButton();
        heroes_button = new javax.swing.JButton();
        villains_button = new javax.swing.JButton();
        battlefield_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        view_details_panel = new javax.swing.JLayeredPane();
        view_details_scroll_panel = new javax.swing.JScrollPane();
        view_details_text_area = new javax.swing.JTextArea();
        go_back_main_menu_button = new javax.swing.JButton();
        battlefield_menu_panel = new javax.swing.JLayeredPane();
        one_vs_one_battle_button = new javax.swing.JButton();
        team_vs_villain_battle_button = new javax.swing.JButton();
        go_back_battlefield_menu_button = new javax.swing.JButton();
        one_vs_one_fight_panel = new javax.swing.JLayeredPane();
        label_one_vs_one = new javax.swing.JLabel();
        planet_select = new javax.swing.JComboBox<>();
        hero_select = new javax.swing.JComboBox<>();
        villain_select = new javax.swing.JComboBox<>();
        ove_vs_one_back_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fight_one_vs_one_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        planets_button.setText("Show Planets");
        planets_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planets_buttonActionPerformed(evt);
            }
        });

        heroes_button.setText("Show Heroes");
        heroes_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                heroes_buttonActionPerformed(evt);
            }
        });

        villains_button.setText("Show Villains");
        villains_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                villains_buttonActionPerformed(evt);
            }
        });

        battlefield_button.setText("Begin Battle");
        battlefield_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                battlefield_buttonActionPerformed(evt);
            }
        });

        exit_button.setText("Exit");
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        main_menu_panel.setLayer(planets_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        main_menu_panel.setLayer(heroes_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        main_menu_panel.setLayer(villains_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        main_menu_panel.setLayer(battlefield_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        main_menu_panel.setLayer(exit_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout main_menu_panelLayout = new javax.swing.GroupLayout(main_menu_panel);
        main_menu_panel.setLayout(main_menu_panelLayout);
        main_menu_panelLayout.setHorizontalGroup(
            main_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_menu_panelLayout.createSequentialGroup()
                .addGroup(main_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(main_menu_panelLayout.createSequentialGroup()
                        .addGap(293, 293, 293)
                        .addGroup(main_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(heroes_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addComponent(villains_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addComponent(planets_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                            .addComponent(battlefield_button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, main_menu_panelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(333, Short.MAX_VALUE))
        );
        main_menu_panelLayout.setVerticalGroup(
            main_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(main_menu_panelLayout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addComponent(planets_button)
                .addGap(18, 18, 18)
                .addComponent(heroes_button)
                .addGap(18, 18, 18)
                .addComponent(villains_button)
                .addGap(28, 28, 28)
                .addComponent(battlefield_button)
                .addGap(88, 88, 88)
                .addComponent(exit_button)
                .addGap(45, 45, 45))
        );

        view_details_text_area.setColumns(20);
        view_details_text_area.setRows(5);
        view_details_scroll_panel.setViewportView(view_details_text_area);

        go_back_main_menu_button.setText("BACK");
        go_back_main_menu_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_back_main_menu_buttonActionPerformed(evt);
            }
        });

        view_details_panel.setLayer(view_details_scroll_panel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        view_details_panel.setLayer(go_back_main_menu_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout view_details_panelLayout = new javax.swing.GroupLayout(view_details_panel);
        view_details_panel.setLayout(view_details_panelLayout);
        view_details_panelLayout.setHorizontalGroup(
            view_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_details_panelLayout.createSequentialGroup()
                .addGroup(view_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(view_details_panelLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(view_details_scroll_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(view_details_panelLayout.createSequentialGroup()
                        .addGap(385, 385, 385)
                        .addComponent(go_back_main_menu_button, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        view_details_panelLayout.setVerticalGroup(
            view_details_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(view_details_panelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(view_details_scroll_panel, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(go_back_main_menu_button)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        one_vs_one_battle_button.setText("One vs One");
        one_vs_one_battle_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                one_vs_one_battle_buttonActionPerformed(evt);
            }
        });

        team_vs_villain_battle_button.setText("Avengers vs Villain");
        team_vs_villain_battle_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                team_vs_villain_battle_buttonActionPerformed(evt);
            }
        });

        go_back_battlefield_menu_button.setText("BACK");
        go_back_battlefield_menu_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                go_back_battlefield_menu_buttonActionPerformed(evt);
            }
        });

        battlefield_menu_panel.setLayer(one_vs_one_battle_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        battlefield_menu_panel.setLayer(team_vs_villain_battle_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        battlefield_menu_panel.setLayer(go_back_battlefield_menu_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout battlefield_menu_panelLayout = new javax.swing.GroupLayout(battlefield_menu_panel);
        battlefield_menu_panel.setLayout(battlefield_menu_panelLayout);
        battlefield_menu_panelLayout.setHorizontalGroup(
            battlefield_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(battlefield_menu_panelLayout.createSequentialGroup()
                .addGap(344, 344, 344)
                .addGroup(battlefield_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(go_back_battlefield_menu_button, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, battlefield_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(team_vs_villain_battle_button, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(one_vs_one_battle_button, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(344, Short.MAX_VALUE))
        );
        battlefield_menu_panelLayout.setVerticalGroup(
            battlefield_menu_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(battlefield_menu_panelLayout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(one_vs_one_battle_button)
                .addGap(18, 18, 18)
                .addComponent(team_vs_villain_battle_button)
                .addGap(70, 70, 70)
                .addComponent(go_back_battlefield_menu_button)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        label_one_vs_one.setText("***** Chose a PLANET, a HERO and a VILLAIN! *****");

        planet_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        planet_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                planet_selectActionPerformed(evt);
            }
        });

        hero_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hero_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hero_selectActionPerformed(evt);
            }
        });

        villain_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        villain_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                villain_selectActionPerformed(evt);
            }
        });

        ove_vs_one_back_button.setText("BACK");
        ove_vs_one_back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ove_vs_one_back_buttonActionPerformed(evt);
            }
        });

        jLabel1.setText("Planets");

        jLabel2.setText("Heroes");

        jLabel3.setText("Villains");

        fight_one_vs_one_button.setText("FIGHT");
        fight_one_vs_one_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fight_one_vs_one_buttonActionPerformed(evt);
            }
        });

        one_vs_one_fight_panel.setLayer(label_one_vs_one, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(planet_select, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(hero_select, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(villain_select, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(ove_vs_one_back_button, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        one_vs_one_fight_panel.setLayer(fight_one_vs_one_button, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout one_vs_one_fight_panelLayout = new javax.swing.GroupLayout(one_vs_one_fight_panel);
        one_vs_one_fight_panel.setLayout(one_vs_one_fight_panelLayout);
        one_vs_one_fight_panelLayout.setHorizontalGroup(
            one_vs_one_fight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(one_vs_one_fight_panelLayout.createSequentialGroup()
                .addGap(286, 286, 286)
                .addComponent(label_one_vs_one, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(ove_vs_one_back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(one_vs_one_fight_panelLayout.createSequentialGroup()
                .addGroup(one_vs_one_fight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(one_vs_one_fight_panelLayout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addGroup(one_vs_one_fight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addGroup(one_vs_one_fight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(planet_select, 0, 223, Short.MAX_VALUE)
                                .addComponent(hero_select, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(villain_select, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(one_vs_one_fight_panelLayout.createSequentialGroup()
                        .addGap(365, 365, 365)
                        .addComponent(fight_one_vs_one_button, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        one_vs_one_fight_panelLayout.setVerticalGroup(
            one_vs_one_fight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(one_vs_one_fight_panelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(one_vs_one_fight_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_one_vs_one)
                    .addComponent(ove_vs_one_back_button))
                .addGap(62, 62, 62)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(planet_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hero_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(villain_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(fight_one_vs_one_button)
                .addGap(56, 56, 56))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_menu_panel)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(view_details_panel))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(battlefield_menu_panel, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(one_vs_one_fight_panel)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_menu_panel)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(view_details_panel))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(battlefield_menu_panel))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(one_vs_one_fight_panel)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void planets_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planets_buttonActionPerformed
        this.view_details_text_area.setText("");
        this.view_details_panel.setVisible(true);
        this.main_menu_panel.setVisible(false);
        try {
            Socket socket = new Socket("127.0.0.1", 4050);

            List<Planet> listOfPlanets = (List<Planet>) this.getConnectionRspObject(socket, "getPlanets");

            for (Planet p : listOfPlanets) {
                System.out.println(p.getName() + "\n");
                this.view_details_text_area.append(p.getName() + "\n");
            };

            socket.close();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_planets_buttonActionPerformed

    private void go_back_main_menu_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_back_main_menu_buttonActionPerformed
        this.view_details_text_area.setText("");
        this.view_details_panel.setVisible(false);
        this.main_menu_panel.setVisible(true);
    }//GEN-LAST:event_go_back_main_menu_buttonActionPerformed

    private void heroes_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_heroes_buttonActionPerformed
        this.view_details_text_area.setText("");
        this.view_details_panel.setVisible(true);
        this.main_menu_panel.setVisible(false);

        try {
            Socket socket = new Socket("127.0.0.1", 4050);

            List<MarvelCharacter> listOfHeroes = (List<MarvelCharacter>) this.getConnectionRspObject(socket, "getHeroes");

            for (MarvelCharacter p : listOfHeroes) {
                this.view_details_text_area.append("Avenger " + p.getName() + " => " + p.getDescription() + ". Attack power: " + p.getAttack() + ". Health points: " + p.getHealth() + "\n");
            };

            socket.close();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_heroes_buttonActionPerformed

    private void villains_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_villains_buttonActionPerformed
        this.view_details_text_area.setText("");
        this.view_details_panel.setVisible(true);
        this.main_menu_panel.setVisible(false);

        try {
            Socket socket = new Socket("127.0.0.1", 4050);

            List<MarvelCharacter> listOfVillains = (List<MarvelCharacter>) this.getConnectionRspObject(socket, "getVillains");

            for (MarvelCharacter p : listOfVillains) {
                this.view_details_text_area.append("Villain " + p.getName() + " => " + p.getDescription() + ". Attack power: " + p.getAttack() + ". Health points: " + p.getHealth() + "\n");
            };

            socket.close();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_villains_buttonActionPerformed

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed

        try {
            Socket socket = new Socket("127.0.0.1", 4050);

            PrintWriter fluxOut = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()), true);
            fluxOut.println("close connection");

            socket.close();

            System.exit(0);
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void battlefield_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_battlefield_buttonActionPerformed
        this.view_details_text_area.setText("");
        this.view_details_panel.setVisible(false);
        this.main_menu_panel.setVisible(false);
        this.battlefield_menu_panel.setVisible(true);
    }//GEN-LAST:event_battlefield_buttonActionPerformed

    private void team_vs_villain_battle_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_team_vs_villain_battle_buttonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_team_vs_villain_battle_buttonActionPerformed

    private void one_vs_one_battle_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_one_vs_one_battle_buttonActionPerformed
        this.one_vs_one_fight_panel.setVisible(true);
        this.view_details_panel.setVisible(false);
        this.battlefield_menu_panel.setVisible(false);
        this.main_menu_panel.setVisible(false);

        try {
            Socket socket = new Socket("127.0.0.1", 4050);

            InputStream inputStream = socket.getInputStream();
            ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
            
            PrintWriter fluxOut = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()), true);

            fluxOut.println("getPlanets");
            List<Planet> listOfPlanets = (List<Planet>) objectInputStream.readObject();
            populatePlanetsCombobox(listOfPlanets);

            fluxOut.println("getHeroes");
            List<MarvelCharacter> listOfHeroes = (List<MarvelCharacter>) objectInputStream.readObject();
            populateMarvelCharacterCombobox(listOfHeroes, false);

            fluxOut.println("getVillains");
            List<MarvelCharacter> listOfVillains = (List<MarvelCharacter>) objectInputStream.readObject();
            populateMarvelCharacterCombobox(listOfVillains, true);

            socket.close();
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_one_vs_one_battle_buttonActionPerformed

    private void go_back_battlefield_menu_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_go_back_battlefield_menu_buttonActionPerformed
        this.view_details_panel.setVisible(false);
        this.battlefield_menu_panel.setVisible(false);
        this.main_menu_panel.setVisible(true);
    }//GEN-LAST:event_go_back_battlefield_menu_buttonActionPerformed

    private void planet_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_planet_selectActionPerformed

        System.out.println(evt);
    }//GEN-LAST:event_planet_selectActionPerformed

    private void ove_vs_one_back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ove_vs_one_back_buttonActionPerformed
        this.one_vs_one_fight_panel.setVisible(false);
        this.view_details_panel.setVisible(false);
        this.battlefield_menu_panel.setVisible(true);
        this.main_menu_panel.setVisible(false);
    }//GEN-LAST:event_ove_vs_one_back_buttonActionPerformed

    private void hero_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hero_selectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hero_selectActionPerformed

    private void villain_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_villain_selectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_villain_selectActionPerformed

    private void fight_one_vs_one_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fight_one_vs_one_buttonActionPerformed
        String planet = planet_select.getSelectedItem().toString();
        String hero = hero_select.getSelectedItem().toString();
        String villain = villain_select.getSelectedItem().toString();

        String options = planet + "," + hero + "," + villain;
        try {
            Socket socket = new Socket("127.0.0.1", 4050);

            InputStream inputStream = socket.getInputStream();
            ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
            
            PrintWriter fluxOut = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()), true);

            fluxOut.println(options);

        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_fight_one_vs_one_buttonActionPerformed

    private Object getConnectionRspObject(Socket socket, String option) throws IOException, ClassNotFoundException {
        
        InputStream inputStream = socket.getInputStream();
        ObjectInputStream objectInputStream = new ObjectInputStream(inputStream);
        
        PrintWriter fluxOut = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()), true);

        fluxOut.println(option);

        return objectInputStream.readObject();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Client client = new Client();
                client.setVisible(true);
                client.view_details_panel.setVisible(false);
                client.battlefield_menu_panel.setVisible(false);
                client.one_vs_one_fight_panel.setVisible(false);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton battlefield_button;
    private javax.swing.JLayeredPane battlefield_menu_panel;
    private javax.swing.JButton exit_button;
    private javax.swing.JButton fight_one_vs_one_button;
    private javax.swing.JButton go_back_battlefield_menu_button;
    private javax.swing.JButton go_back_main_menu_button;
    private javax.swing.JComboBox<String> hero_select;
    private javax.swing.JButton heroes_button;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel label_one_vs_one;
    private javax.swing.JLayeredPane main_menu_panel;
    private javax.swing.JButton one_vs_one_battle_button;
    private javax.swing.JLayeredPane one_vs_one_fight_panel;
    private javax.swing.JButton ove_vs_one_back_button;
    private javax.swing.JComboBox<String> planet_select;
    private javax.swing.JButton planets_button;
    private javax.swing.JButton team_vs_villain_battle_button;
    private javax.swing.JLayeredPane view_details_panel;
    private javax.swing.JScrollPane view_details_scroll_panel;
    private javax.swing.JTextArea view_details_text_area;
    private javax.swing.JComboBox<String> villain_select;
    private javax.swing.JButton villains_button;
    // End of variables declaration//GEN-END:variables

    private void populatePlanetsCombobox(List<Planet> listOfPlanets) {
        this.planet_select.removeAllItems();
        listOfPlanets.forEach(p -> {
            this.planet_select.addItem(p.getName());
        });
    }

    private void populateMarvelCharacterCombobox(List<MarvelCharacter> list, Boolean isVillain) {
        if (isVillain) {
            this.villain_select.removeAllItems();
            list.forEach(p -> {
                this.villain_select.addItem(p.getName());
            });
        } else {
            this.hero_select.removeAllItems();
            list.forEach(p -> {
                this.hero_select.addItem(p.getName());
            });
        }

    }
}
